@page "/chapter/{ChapterName}"
@using Microsoft.AspNetCore.Identity
@using System.Text.Json
@inject UserManager<ApplicationUser> UserManager
@inject HttpClient Http
@inject AuthenticationStateProvider AuthProvider
@using BookParadise.Data
@inject ApplicationDbContext _context
@using Microsoft.EntityFrameworkCore;

@code {
    [Parameter] public string ChapterName { get; set; }
    private List<int> pageNumbers = new();
    private ICollection<Comment> comments;
    private ApplicationUser currentUser;
    private HashSet<long> ShowReplyBox = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            currentUser = await UserManager.GetUserAsync(user);
        }
        var chapter = await _context.Chapters.Include(c => c.Comments).FirstOrDefaultAsync(c => c.Name == ChapterName);

        var pageNumbers = Enumerable.Range(1, chapter.NumberOfPages).ToList();

        comments = chapter.Comments;
    }

    private void ToggleReplyBox(long commentId)
    {
        if (ShowReplyBox.Contains(commentId))
            ShowReplyBox.Remove(commentId);
        else
            ShowReplyBox.Add(commentId);
    }

    private async Task DeleteComment(long commentId, string type)
    {
        var response = await Http.DeleteAsync($"/api/BookController/delete-comments?id={commentId}&type={type}");

    }

}
<head>
    <title>Book Paradise</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/js/all.min.js"></script>

    <link href="/style/comments.css" rel="stylesheet">
    <link href="/style/read-chapter.css" rel="stylesheet">
    <script src="/script/show-replies.js"></script>

</head>

<HeadSection />
<div class="pages text-center bg-success">
    <div class="container">
        @foreach (var pageNumber in pageNumbers)
        {
            <img src="/novel pages/@ChapterName-page@pageNumber.jpg" alt="Page Image" class="img-fluid mb-3">
        }
    </div>
</div>

<div id="comment-box" class="container">
    <h2>Comments</h2>
    @if (!comments.Any())
    {
        <div>There are no comments yet.</div>
    }
    else
    {
        @foreach (var comment in comments)
        {
            <div class="comment">
                <div class="comment-author">@comment.User.FullName</div>
                <div class="comment-date">@comment.CreatedDate</div>
                <div class="comment-text">@comment.CommentBody</div>
                <br>
                <button class="btn btn-primary">Replies <i class="fas fa-bars"></i></button>

                @if (currentUser?.Email == comment.User.Email)
                {
                    string type = "comment";
                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteComment(comment.Id, type)">Delete</button>
                }
                <button class="btn btn-primary btn-sm" @onclick="() => ToggleReplyBox(comment.Id)">Replies</button>

                @if (ShowReplyBox.Contains(comment.Id))
                {
                    <div class="mt-3">
                        @if (comment.Replies == null || !comment.Replies.Any())
                        {
                            <p>No replies yet.</p>
                        }
                        else
                        {
                            @foreach (var reply in comment.Replies)
                            {
                                <div class="ms-4">
                                    <strong>@reply.User.FullName</strong> (@reply.CreatedDate)
                                    <p>@reply.ReplyBody</p>

                                    @if (reply.User.Email == currentUser.Email)
                                    {
                                        string type = "reply";
                                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteComment(reply.Id, type)">Delete</button>
                                    }
                                </div>
                            }
                        }

                        @if (currentUser!=null)
                        {
                            <div id="write-replies">
                                <form action="/post-reply" method="post">
                                    <input type="hidden" name="userEmail" value="@currentUser.Email">
                                    <input type="hidden" name="commentId" value="@comment.Id">
                                    <textarea id="comment-area" name="replyBody" placeholder="Write a comment..."></textarea>
                                    <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane"></i></button>
                                </form>
                            </div>
                        }
                    </div>
                }

            </div>
        }
    }

    @if (currentUser != null)
    {
        <br>
        <div id="write-comments">
            <form action="/post-comment" method="post">
                <input type="hidden" name="commentTarget" value="chapter">
                <input type="hidden" name="contentName" value="${chapterName}">
                <textarea id="comment-area" name="commentBody" placeholder="Write a comment..."></textarea>
                <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane"></i></button>
            </form>
        </div>
    }
</div>
<FooterSection />